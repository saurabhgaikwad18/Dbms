Problem statements 20
Write PL/SQL code block that will merge the data available in the newly created table
NEW_BRANCHES with the data available in the table BRANCH_MASTER. If the data in the first
table already exists in the second table then data should be skipped.(parameterized cursor)

CREATE TABLE NEW_BRANCHES (
    BRANCH_ID NUMBER,
    BRANCH_NAME VARCHAR2(100),
    BRANCH_LOCATION VARCHAR2(100)
);

CREATE TABLE BRANCH_MASTER (
    BRANCH_ID NUMBER PRIMARY KEY,
    BRANCH_NAME VARCHAR2(100),
    BRANCH_LOCATION VARCHAR2(100)
);


INSERT INTO NEW_BRANCHES (BRANCH_ID, BRANCH_NAME, BRANCH_LOCATION) VALUES (1, 'Branch A', 'Location A');
INSERT INTO NEW_BRANCHES (BRANCH_ID, BRANCH_NAME, BRANCH_LOCATION) VALUES (2, 'Branch B', 'Location B');
INSERT INTO NEW_BRANCHES (BRANCH_ID, BRANCH_NAME, BRANCH_LOCATION) VALUES (3, 'Branch C', 'Location C');


INSERT INTO BRANCH_MASTER (BRANCH_ID, BRANCH_NAME, BRANCH_LOCATION) VALUES (2, 'Branch B', 'Location B');
INSERT INTO BRANCH_MASTER (BRANCH_ID, BRANCH_NAME, BRANCH_LOCATION) VALUES (3, 'Branch C', 'Location C');
INSERT INTO BRANCH_MASTER (BRANCH_ID, BRANCH_NAME, BRANCH_LOCATION) VALUES (4, 'Branch D', 'Location D');


DECLARE
  CURSOR new_branches_cursor IS
    SELECT *
    FROM NEW_BRANCHES;
    
  v_branch_id BRANCH_MASTER.BRANCH_ID%TYPE;
BEGIN
  FOR new_branch IN new_branches_cursor LOOP
    -- Check if the branch already exists in BRANCH_MASTER
    BEGIN
      SELECT BRANCH_ID
      INTO v_branch_id
      FROM BRANCH_MASTER
      WHERE BRANCH_ID = new_branch.BRANCH_ID;

      -- If branch exists, skip to the next iteration
      CONTINUE;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        -- Insert the branch into BRANCH_MASTER if it doesn't exist
        INSERT INTO BRANCH_MASTER (BRANCH_ID, BRANCH_NAME, BRANCH_LOCATION)
        VALUES (new_branch.BRANCH_ID, new_branch.BRANCH_NAME, new_branch.BRANCH_LOCATION);
    END;
  END LOOP;
END;
/

COMMIT;


-- Check the data in NEW_BRANCHES table
SELECT * FROM NEW_BRANCHES;

-- Check the data in BRANCH_MASTER table
SELECT * FROM BRANCH_MASTER;


-- Truncate or drop the NEW_BRANCHES table
TRUNCATE TABLE NEW_BRANCHES;
-- or
DROP TABLE NEW_BRANCHES;
